server:
  port: ${port:8082}
upload:
  path:
    base: /var/bca/images
    menu: /menu/
    category: /structures/
    theme: /themes/
    article: /articles/
    user: /users/
pakar-oauth-service:
  ribbon:
    listOfServers: http://192.168.100.83:12081
    ServerListRefreshInterval: 10000
spring:
  rest:
    timeout:
      read: 60000
      connection: 60000
  profiles:
    active: "dev-local"
  main:
    banner-mode: "off"
  jpa:
    hibernate:
      ddl-auto: update
    generate-ddl: true
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    properties:
      hibernate:
        dialect:org.hibernate.dialect.PostgreSQL10Dialect
  # Enable multipart uploads
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 2MB
      max-request-size: 10MB
  multipart:
    max-size: 2000000
#    file-type: image/png,image/jpeg,image/gif,image/avif,image/apng,image/svg+xml,image/bmp,image/x-icon,image/tiff
    file-type: image/png,image/jpeg
  article:
    param-tag: "{}|[]"
    width-article-image: 307
    height-article-image: 425
    file-type: image/png,image/jpeg
    max-size: 700000
---
spring:
  profiles: dev-local
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://192.168.100.83:12081/oauth/token_key # JSON Web Key URI to use to verify the JWT token.
          issuer-uri: http://192.168.100.83:12081/api/auth/me
        token-info-uri: http://192.168.100.83:12081/oauth/check_token
        auth-server: http://192.168.100.83:12081
        doc-server: http://192.168.100.83:12082
        wf-server: http://192.168.100.83:12083
      server:
        url: http://192.168.100.83:12081
      clientId: 8C21EBEEB1AA3FBFE05400144FFBD319
      clientSecret: da82edc6dcc1af30
    jwt:
      signingkey: pakar123
  dataSource:
    driver-class-name: org.postgresql.Driver
#    url: jdbc:postgresql://host.docker.internal:5432/postgres
#    username: postgres
#    password: password
    url: jdbc:postgresql://36.89.25.220:5432/pakardb3
    username: pakar3
    password: pakar123
    hikari:
      type: com.zaxxer.hikari.HikariDataSource
      pool-name: pakar-doc-pool
      maximum-pool-size: 20
      max-lifetime: 1800000
      idle-timeout: 30000
      minimum-idle: 5
      connection-timeout: 20000
---
spring:
  profiles: dev-local-docker
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://pakar-oauth-server:12081/oauth/token_key # JSON Web Key URI to use to verify the JWT token.
          issuer-uri: http://pakar-oauth-server:12081/api/auth/me
        token-info-uri: http://pakar-oauth-server:12081/oauth/check_token
        auth-server: http://192.168.100.83:12081
        doc-server: http://192.168.100.83:12082
        wf-server: http://192.168.100.83:12083
      server:
        url: http://pakar-oauth-server:12081
      clientId: 8C21EBEEB1AA3FBFE05400144FFBD319
      clientSecret: da82edc6dcc1af30
    jwt:
      signingkey: pakar123
  dataSource:
    driver-class-name: org.postgresql.Driver
    #    url: jdbc:postgresql://host.docker.internal:5432/postgres
    #    username: postgres
    #    password: password
    url: jdbc:postgresql://36.89.25.220:5432/pakardb3
    username: pakar3
    password: pakar123
    hikari:
      connectionTimeout: 20000
      maximumPoolSize: 5
---
spring:
  profiles: dev-ogya
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://192.168.181.70:12081/oauth/token_key # JSON Web Key URI to use to verify the JWT token.
          issuer-uri: http://192.168.181.70:12081/api/auth/me
        token-info-uri: http://192.168.181.70:12081/oauth/check_token
        auth-server: http://192.168.181.70:12081
        doc-server: http://192.168.181.70:12082
        wf-server: http://192.168.181.70:12083
      server:
        url: http://192.168.181.70:12081
      clientId: 8C21EBEEB1AA3FBFE05400144FFBD319
      clientSecret: da82edc6dcc1af30
    jwt:
      signingkey: pakar123
  dataSource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://192.168.181.95:5432/pakardb3
    username: pakar3
    password: pakar123
    hikari:
      type: com.zaxxer.hikari.HikariDataSource
      pool-name: pakar-doc-pool
      maximum-pool-size: 20
      max-lifetime: 1800000
      idle-timeout: 30000
      minimum-idle: 5
      connection-timeout: 20000
---
spring:
  profiles: dev-ogy4
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://192.168.181.70:12081/oauth/token_key # JSON Web Key URI to use to verify the JWT token.
          issuer-uri: http://192.168.181.70:12081/api/auth/me
        token-info-uri: http://192.168.181.70:12081/oauth/check_token
        auth-server: http://192.168.181.70:12081
        doc-server: http://192.168.181.70:12082
        wf-server: http://192.168.181.70:12083
      server:
        url: http://192.168.181.70:12081
      clientId: 8C21EBEEB1AA3FBFE05400144FFBD319
      clientSecret: da82edc6dcc1af30
    jwt:
      signingkey: pakar123
  dataSource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://192.168.181.95:5432/pakardb4
    username: pakar4
    password: pakar123
    hikari:
      type: com.zaxxer.hikari.HikariDataSource
      pool-name: pakar-doc-pool
      maximum-pool-size: 20
      max-lifetime: 1800000
      idle-timeout: 30000
      minimum-idle: 5
      connection-timeout: 20000
---
spring:
  profiles: dev-bca
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: https://192.168.181.70:13081/oauth/token_key # JSON Web Key URI to use to verify the JWT token.
          issuer-uri: http://192.168.181.70:13081/api/auth/me
        token-info-uri: http://192.168.181.70:13081/oauth/check_token
        auth-server: http://192.168.181.70:13081
        doc-server: http://192.168.181.70:13082
        wf-server: http://192.168.181.70:13083
      server:
        url: http://192.168.181.70:13081
      clientId: 8C21EBEEB1AA3FBFE05400144FFBD319
      clientSecret: da82edc6dcc1af30
    jwt:
      signingkey: pakar123
  dataSource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://192.168.181.95:5432/pakardb2
    username: pakar2
    password: pakar123
    hikari:
      type: com.zaxxer.hikari.HikariDataSource
      pool-name: pakar-doc-pool
      maximum-pool-size: 20
      max-lifetime: 1800000
      idle-timeout: 30000
      minimum-idle: 5
      connection-timeout: 20000
